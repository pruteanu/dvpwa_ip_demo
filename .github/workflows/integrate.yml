name: CI Basic
on:
  pull_request:
    branches: [master]

jobs:
  test_pull_request:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker compose web app
        run: docker-compose -f docker-compose.yml up -d
#      - name: logs
#        run: docker logs dvpwa_ip_demo_postgres_1
#      - name: whoami
#        run: whoami
#      - name: uname
#        run: uname -a
#      - name: ping localhost
#        run: ping -c 4 localhost
#      - name: ping 127.0.0.1
#        run: ping -c 4 127.0.0.1
#      - name: cat release
#        run: cat /etc/lsb-release
#      - name: Netstat
#        run: netstat -plnt
#      - name: wget 127
#        uses: wei/wget@v1
#        with:
#          args: -O home.html http://127.0.0.1:8080
#      - name: wget localhost
#        uses: wei/wget@v1
#        with:
#          args: -O home.html http://localhost:8080
#      - name: telnet
#        run: telnet 127.0.0.1 8080
#      - name: nc
#        run: nc -vz 127.0.0.1 8080
#      - name: Set docker container id
#        run:  echo "DOCKER_CONTAINER_ID=$(docker ps -a | grep "dvpwa_ip_demo_sqli" | cut -d " " -f1)" >> $GITHUB_ENV
#      - name: Set webapp IP
#        run: echo "DOCKER_WEB_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $DOCKER_CONTAINER_ID )" >> $GITHUB_ENV
#      - name: ifconfig
#        run: ifconfig
#      - name: docker ps
#        run: docker ps -a
#      - name: Sleep for 90 seconds
#        run: sleep 90s
#        shell: bash
#      - name: docker ps
#        run: docker ps -a
      - name: Verifying UFW status
        run: sudo ufw status
#      - name: curl
#        run: curl -v http://localhost:8080
#      - name: create Arachni's subdir in Home
#        run: mkdir ~/arachni
      - name: Downloading Arachni archive
        uses: wei/wget@v1
        with:
          args: https://github.com/Arachni/arachni/releases/download/v1.6.1.1/arachni-1.6.1.1-0.6.1.1-linux-x86_64.tar.gz
      - name: Scanning localhost-deployed web app with Arachni
        run: |
              tar -xvf arachni-1.6.1.1-0.6.1.1-linux-x86_64.tar.gz > /dev/null
              cd arachni-1.6.1.1-0.6.1.1/
              CURR_HOSTNAME=$(cat /etc/hostname)
              mkdir "./reports"
              ./bin/arachni http://${CURR_HOSTNAME}:8080/courses/1/review  --checks 'xss*' --report-save-path './reports' 2>&1 > ./reports/arachni_scan_stdout_stderr.txt
              scan_status=$(grep -oP "With issues: ([0-9]*)" ./reports/arachni_scan_stdout_stderr.txt | cut -d: -f2 | xargs)
              grep -A1 -B1 "With issues: ([0-9]*)" ./reports/arachni_scan_stdout_stderr.txt
              echo "Based on the above summarised output of the arachni scan, the identified status is: '$scan_status'! For more details, please open the .txt file in the job artefacts..."
              exit $scan_status
      - name: Archive report artifacts
        uses: actions/upload-artifact@v3
        with:
          name: arachni localhost
          path: arachni-1.6.1.1-0.6.1.1/reports

